type Query {
  asset(id: String!, locale: String, preview: Boolean): Asset
  assetCollection(
    limit: Int = 100
    locale: String
    order: [AssetOrder]
    preview: Boolean
    skip: Int = 0
    where: AssetFilter
  ): AssetCollection
  customOrder(id: String!, preview: Boolean, locale: String): CustomOrder
  customOrderCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
    where: CustomOrderFilter
    order: [CustomOrderOrder]
  ): CustomOrderCollection
  entryCollection(
    limit: Int = 100
    locale: String
    order: [EntryOrder]
    preview: Boolean
    skip: Int = 0
    where: EntryFilter
  ): EntryCollection
  hauteCouture(id: String!, preview: Boolean, locale: String): HauteCouture
  hauteCoutureCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
    where: HauteCoutureFilter
    order: [HauteCoutureOrder]
  ): HauteCoutureCollection
  home(id: String!, locale: String, preview: Boolean): Home
  homeCollection(
    limit: Int = 100
    locale: String
    order: [HomeOrder]
    preview: Boolean
    skip: Int = 0
    where: HomeFilter
  ): HomeCollection
  navigation(id: String!, locale: String, preview: Boolean): Navigation
  navigationCollection(
    limit: Int = 100
    locale: String
    order: [NavigationOrder]
    preview: Boolean
    skip: Int = 0
    where: NavigationFilter
  ): NavigationCollection
  news(id: String!, preview: Boolean, locale: String): News
  newsCategory(id: String!, preview: Boolean, locale: String): NewsCategory
  newsCategoryCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
    where: NewsCategoryFilter
    order: [NewsCategoryOrder]
  ): NewsCategoryCollection
  newsCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
    where: NewsFilter
    order: [NewsOrder]
  ): NewsCollection
  product(id: String!, preview: Boolean, locale: String): Product
  productCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
    where: ProductFilter
    order: [ProductOrder]
  ): ProductCollection
}

"""
Represents a binary file in a space. An asset can be any file type.
"""
type Asset {
  contentType: String
  contentfulMetadata: ContentfulMetadata!
  description: String
  fileName: String
  height: Int
  linkedFrom(allowedLocales: [String]): AssetLinkingCollections
  size: Int
  sys: Sys!
  title: String
  url(transform: ImageTransformOptions): String
  width: Int
}

type Sys {
  environmentId: String!
  firstPublishedAt: DateTime
  id: String!
  publishedAt: DateTime
  publishedVersion: Int
  spaceId: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z,
    compliant with the 'date-time' format outlined in section 5.6 of
    the RFC 3339 profile of the ISO 8601 standard for representation
    of dates and times using the Gregorian calendar.
"""
scalar DateTime

type ContentfulMetadata {
  tags: [ContentfulTag]!
}

"""
Represents a tag entity for finding and organizing content easily.
    Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags
"""
type ContentfulTag {
  id: String
  name: String
}

input ImageTransformOptions {
  """
  Desired background color, used with corner radius or `PAD` resize strategy.
          Defaults to transparent (for `PNG`, `PNG8` and `WEBP`) or white (for `JPG` and `JPG_PROGRESSIVE`).
  """
  backgroundColor: HexColor

  """
  Desired corner radius in pixels.
          Results in an image with rounded corners (pass `-1` for a full circle/ellipse).
          Defaults to `0`. Uses desired background color as padding color,
          unless the format is `JPG` or `JPG_PROGRESSIVE` and resize strategy is `PAD`, then defaults to white.
  """
  cornerRadius: Int

  """
  Desired image format. Defaults to the original image format.
  """
  format: ImageFormat

  """
  Desired height in pixels. Defaults to the original image height.
  """
  height: Dimension

  """
  Desired quality of the image in percents.
          Used for `PNG8`, `JPG`, `JPG_PROGRESSIVE` and `WEBP` formats.
  """
  quality: Quality

  """
  Desired resize focus area. Defaults to `CENTER`.
  """
  resizeFocus: ImageResizeFocus

  """
  Desired resize strategy. Defaults to `FIT`.
  """
  resizeStrategy: ImageResizeStrategy

  """
  Desired width in pixels. Defaults to the original image width.
  """
  width: Dimension
}

"""
The 'Dimension' type represents dimensions as whole numeric values between `1` and `4000`.
"""
scalar Dimension

"""
The 'Quality' type represents quality as whole numeric values between `1` and `100`.
"""
scalar Quality

enum ImageResizeStrategy {
  """
  Crops a part of the original image to fit into the specified dimensions.
  """
  CROP

  """
  Resizes the image to the specified dimensions, cropping the image if needed.
  """
  FILL

  """
  Resizes the image to fit into the specified dimensions.
  """
  FIT

  """
  Resizes the image to the specified dimensions, padding the image if needed.
          Uses desired background color as padding color.
  """
  PAD

  """
  Resizes the image to the specified dimensions, changing the original aspect ratio if needed.
  """
  SCALE

  """
  Creates a thumbnail from the image.
  """
  THUMB
}

enum ImageResizeFocus {
  """
  Focus the resizing on the bottom.
  """
  BOTTOM

  """
  Focus the resizing on the bottom left.
  """
  BOTTOM_LEFT

  """
  Focus the resizing on the bottom right.
  """
  BOTTOM_RIGHT

  """
  Focus the resizing on the center.
  """
  CENTER

  """
  Focus the resizing on the largest face.
  """
  FACE

  """
  Focus the resizing on the area containing all the faces.
  """
  FACES

  """
  Focus the resizing on the left.
  """
  LEFT

  """
  Focus the resizing on the right.
  """
  RIGHT

  """
  Focus the resizing on the top.
  """
  TOP

  """
  Focus the resizing on the top left.
  """
  TOP_LEFT

  """
  Focus the resizing on the top right.
  """
  TOP_RIGHT
}

"""
The 'HexColor' type represents color in `rgb:ffffff` string format.
"""
scalar HexColor

enum ImageFormat {
  """
  JPG image format.
  """
  JPG

  """
  Progressive JPG format stores multiple passes of an image in progressively higher detail.
          When a progressive image is loading, the viewer will first see a lower quality pixelated version which
          will gradually improve in detail, until the image is fully downloaded. This is to display an image as
          early as possible to make the layout look as designed.
  """
  JPG_PROGRESSIVE

  """
  PNG image format
  """
  PNG

  """
  8-bit PNG images support up to 256 colors and weigh less than the standard 24-bit PNG equivalent.
          The 8-bit PNG format is mostly used for simple images, such as icons or logos.
  """
  PNG8

  """
  WebP image format.
  """
  WEBP
}

type AssetLinkingCollections {
  entryCollection(
    limit: Int = 100
    locale: String
    preview: Boolean
    skip: Int = 0
  ): EntryCollection
  hauteCoutureCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): HauteCoutureCollection
  homeCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): HomeCollection
}

type EntryCollection {
  items: [Entry]!
  limit: Int!
  skip: Int!
  total: Int!
}

interface Entry {
  contentfulMetadata: ContentfulMetadata!
  sys: Sys!
}

type AssetCollection {
  items: [Asset]!
  limit: Int!
  skip: Int!
  total: Int!
}

input AssetFilter {
  AND: [AssetFilter]
  OR: [AssetFilter]
  contentType: String
  contentType_contains: String
  contentType_exists: Boolean
  contentType_in: [String]
  contentType_not: String
  contentType_not_contains: String
  contentType_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  fileName: String
  fileName_contains: String
  fileName_exists: Boolean
  fileName_in: [String]
  fileName_not: String
  fileName_not_contains: String
  fileName_not_in: [String]
  height: Int
  height_exists: Boolean
  height_gt: Int
  height_gte: Int
  height_in: [Int]
  height_lt: Int
  height_lte: Int
  height_not: Int
  height_not_in: [Int]
  size: Int
  size_exists: Boolean
  size_gt: Int
  size_gte: Int
  size_in: [Int]
  size_lt: Int
  size_lte: Int
  size_not: Int
  size_not_in: [Int]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  url: String
  url_contains: String
  url_exists: Boolean
  url_in: [String]
  url_not: String
  url_not_contains: String
  url_not_in: [String]
  width: Int
  width_exists: Boolean
  width_gt: Int
  width_gte: Int
  width_in: [Int]
  width_lt: Int
  width_lte: Int
  width_not: Int
  width_not_in: [Int]
}

input SysFilter {
  firstPublishedAt: DateTime
  firstPublishedAt_exists: Boolean
  firstPublishedAt_gt: DateTime
  firstPublishedAt_gte: DateTime
  firstPublishedAt_in: [DateTime]
  firstPublishedAt_lt: DateTime
  firstPublishedAt_lte: DateTime
  firstPublishedAt_not: DateTime
  firstPublishedAt_not_in: [DateTime]
  id: String
  id_contains: String
  id_exists: Boolean
  id_in: [String]
  id_not: String
  id_not_contains: String
  id_not_in: [String]
  publishedAt: DateTime
  publishedAt_exists: Boolean
  publishedAt_gt: DateTime
  publishedAt_gte: DateTime
  publishedAt_in: [DateTime]
  publishedAt_lt: DateTime
  publishedAt_lte: DateTime
  publishedAt_not: DateTime
  publishedAt_not_in: [DateTime]
  publishedVersion: Float
  publishedVersion_exists: Boolean
  publishedVersion_gt: Float
  publishedVersion_gte: Float
  publishedVersion_in: [Float]
  publishedVersion_lt: Float
  publishedVersion_lte: Float
  publishedVersion_not: Float
  publishedVersion_not_in: [Float]
}

input ContentfulMetadataFilter {
  tags: ContentfulMetadataTagsFilter
  tags_exists: Boolean
}

input ContentfulMetadataTagsFilter {
  id_contains_all: [String]
  id_contains_none: [String]
  id_contains_some: [String]
}

enum AssetOrder {
  contentType_ASC
  contentType_DESC
  fileName_ASC
  fileName_DESC
  height_ASC
  height_DESC
  size_ASC
  size_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  url_ASC
  url_DESC
  width_ASC
  width_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/pdt7v3ruuhi4/content_types/navigation)
"""
type Navigation implements Entry {
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): NavigationLinkingCollections
  menu(locale: String): JSON
  slug(locale: String): String
  sns(locale: String): JSON
  sys: Sys!
  title(locale: String): String
}

type NavigationLinkingCollections {
  entryCollection(
    limit: Int = 100
    locale: String
    preview: Boolean
    skip: Int = 0
  ): EntryCollection
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type NavigationCollection {
  items: [Navigation]!
  limit: Int!
  skip: Int!
  total: Int!
}

input NavigationFilter {
  AND: [NavigationFilter]
  OR: [NavigationFilter]
  contentfulMetadata: ContentfulMetadataFilter
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

enum NavigationOrder {
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/pdt7v3ruuhi4/content_types/home)
"""
type Home implements Entry {
  collaboration(preview: Boolean, locale: String): Asset
  contentfulMetadata: ContentfulMetadata!
  customOrder(preview: Boolean, locale: String): Asset
  description(locale: String): HomeDescription
  hauteCouture(preview: Boolean, locale: String): Asset
  linkedFrom(allowedLocales: [String]): HomeLinkingCollections
  newsPickupCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): HomeNewsPickupCollection
  product(preview: Boolean, locale: String): Asset
  slug(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type HomeLinkingCollections {
  entryCollection(
    limit: Int = 100
    locale: String
    preview: Boolean
    skip: Int = 0
  ): EntryCollection
}

type HomeDescription {
  json: JSON!
  links: HomeDescriptionLinks!
}

type HomeDescriptionLinks {
  assets: HomeDescriptionAssets!
  entries: HomeDescriptionEntries!
}

type HomeDescriptionEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type HomeDescriptionAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type HomeCollection {
  items: [Home]!
  limit: Int!
  skip: Int!
  total: Int!
}

input HomeFilter {
  AND: [HomeFilter]
  OR: [HomeFilter]
  collaboration_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  customOrder_exists: Boolean
  description_contains: String
  description_exists: Boolean
  description_not_contains: String
  hauteCouture_exists: Boolean
  newsPickupCollection_exists: Boolean
  product_exists: Boolean
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

enum HomeOrder {
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

input EntryFilter {
  AND: [EntryFilter]
  OR: [EntryFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

enum EntryOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type HomeNewsPickupCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [News]!
}

"""
[See type definition](https://app.contentful.com/spaces/bdipztv4q6kp/content_types/news)
"""
type News implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): NewsLinkingCollections
  title(locale: String): String
  slug(locale: String): String
  date(locale: String): DateTime
  category(preview: Boolean, locale: String): NewsCategory
  content(locale: String): NewsContent
}

type NewsLinkingCollections {
  entryCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): EntryCollection
  homeCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): HomeCollection
}

"""
[See type definition](https://app.contentful.com/spaces/bdipztv4q6kp/content_types/newsCategory)
"""
type NewsCategory implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): NewsCategoryLinkingCollections
  title(locale: String): String
  slug(locale: String): String
}

type NewsCategoryLinkingCollections {
  entryCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): EntryCollection
  newsCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): NewsCollection
}

type NewsCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [News]!
}

type NewsContent {
  json: JSON!
  links: NewsContentLinks!
}

type NewsContentLinks {
  entries: NewsContentEntries!
  assets: NewsContentAssets!
}

type NewsContentEntries {
  inline: [Entry]!
  hyperlink: [Entry]!
  block: [Entry]!
}

type NewsContentAssets {
  hyperlink: [Asset]!
  block: [Asset]!
}

input NewsFilter {
  category: cfNewsCategoryNestedFilter
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  slug_exists: Boolean
  slug: String
  slug_not: String
  slug_in: [String]
  slug_not_in: [String]
  slug_contains: String
  slug_not_contains: String
  date_exists: Boolean
  date: DateTime
  date_not: DateTime
  date_in: [DateTime]
  date_not_in: [DateTime]
  date_gt: DateTime
  date_gte: DateTime
  date_lt: DateTime
  date_lte: DateTime
  category_exists: Boolean
  content_exists: Boolean
  content_contains: String
  content_not_contains: String
  OR: [NewsFilter]
  AND: [NewsFilter]
}

input cfNewsCategoryNestedFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  slug_exists: Boolean
  slug: String
  slug_not: String
  slug_in: [String]
  slug_not_in: [String]
  slug_contains: String
  slug_not_contains: String
  OR: [cfNewsCategoryNestedFilter]
  AND: [cfNewsCategoryNestedFilter]
}

enum NewsOrder {
  title_ASC
  title_DESC
  slug_ASC
  slug_DESC
  date_ASC
  date_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type NewsCategoryCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [NewsCategory]!
}

input NewsCategoryFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  slug_exists: Boolean
  slug: String
  slug_not: String
  slug_in: [String]
  slug_not_in: [String]
  slug_contains: String
  slug_not_contains: String
  OR: [NewsCategoryFilter]
  AND: [NewsCategoryFilter]
}

enum NewsCategoryOrder {
  title_ASC
  title_DESC
  slug_ASC
  slug_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type HauteCoutureCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [HauteCouture]!
}

"""
[See type definition](https://app.contentful.com/spaces/pdt7v3ruuhi4/content_types/hauteCouture)
"""
type HauteCouture implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): HauteCoutureLinkingCollections
  title(locale: String): String
  slug(locale: String): String
  description(locale: String): HauteCoutureDescription
  image(preview: Boolean, locale: String): Asset
  formTitle(locale: String): String
  formDescription(locale: String): HauteCoutureFormDescription
}

type HauteCoutureLinkingCollections {
  entryCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): EntryCollection
}

type HauteCoutureDescription {
  json: JSON!
  links: HauteCoutureDescriptionLinks!
}

type HauteCoutureDescriptionLinks {
  entries: HauteCoutureDescriptionEntries!
  assets: HauteCoutureDescriptionAssets!
}

type HauteCoutureDescriptionEntries {
  inline: [Entry]!
  hyperlink: [Entry]!
  block: [Entry]!
}

type HauteCoutureDescriptionAssets {
  hyperlink: [Asset]!
  block: [Asset]!
}

type HauteCoutureFormDescription {
  json: JSON!
  links: HauteCoutureFormDescriptionLinks!
}

type HauteCoutureFormDescriptionLinks {
  entries: HauteCoutureFormDescriptionEntries!
  assets: HauteCoutureFormDescriptionAssets!
}

type HauteCoutureFormDescriptionEntries {
  inline: [Entry]!
  hyperlink: [Entry]!
  block: [Entry]!
}

type HauteCoutureFormDescriptionAssets {
  hyperlink: [Asset]!
  block: [Asset]!
}

input HauteCoutureFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  slug_exists: Boolean
  slug: String
  slug_not: String
  slug_in: [String]
  slug_not_in: [String]
  slug_contains: String
  slug_not_contains: String
  description_exists: Boolean
  description_contains: String
  description_not_contains: String
  image_exists: Boolean
  formTitle_exists: Boolean
  formTitle: String
  formTitle_not: String
  formTitle_in: [String]
  formTitle_not_in: [String]
  formTitle_contains: String
  formTitle_not_contains: String
  formDescription_exists: Boolean
  formDescription_contains: String
  formDescription_not_contains: String
  OR: [HauteCoutureFilter]
  AND: [HauteCoutureFilter]
}

enum HauteCoutureOrder {
  title_ASC
  title_DESC
  slug_ASC
  slug_DESC
  formTitle_ASC
  formTitle_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/pdt7v3ruuhi4/content_types/product)
"""
type Product implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): ProductLinkingCollections
  title(locale: String): String
  slug(locale: String): String
}

type ProductLinkingCollections {
  entryCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): EntryCollection
}

type ProductCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [Product]!
}

input ProductFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  slug_exists: Boolean
  slug: String
  slug_not: String
  slug_in: [String]
  slug_not_in: [String]
  slug_contains: String
  slug_not_contains: String
  OR: [ProductFilter]
  AND: [ProductFilter]
}

enum ProductOrder {
  title_ASC
  title_DESC
  slug_ASC
  slug_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/pdt7v3ruuhi4/content_types/customOrder)
"""
type CustomOrder implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): CustomOrderLinkingCollections
  title(locale: String): String
  slug(locale: String): String
  description(locale: String): CustomOrderDescription
}

type CustomOrderLinkingCollections {
  entryCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): EntryCollection
}

type CustomOrderDescription {
  json: JSON!
  links: CustomOrderDescriptionLinks!
}

type CustomOrderDescriptionLinks {
  entries: CustomOrderDescriptionEntries!
  assets: CustomOrderDescriptionAssets!
}

type CustomOrderDescriptionEntries {
  inline: [Entry]!
  hyperlink: [Entry]!
  block: [Entry]!
}

type CustomOrderDescriptionAssets {
  hyperlink: [Asset]!
  block: [Asset]!
}

type CustomOrderCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [CustomOrder]!
}

input CustomOrderFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  slug_exists: Boolean
  slug: String
  slug_not: String
  slug_in: [String]
  slug_not_in: [String]
  slug_contains: String
  slug_not_contains: String
  description_exists: Boolean
  description_contains: String
  description_not_contains: String
  OR: [CustomOrderFilter]
  AND: [CustomOrderFilter]
}

enum CustomOrderOrder {
  title_ASC
  title_DESC
  slug_ASC
  slug_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}
